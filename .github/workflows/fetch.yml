name: Daily Job Fetch and Deploy

on:
  schedule:
    # Runs daily at 5 AM IST (11:30 PM UTC previous day)
    - cron: '30 23 * * *'
  workflow_dispatch:
    # Allows manual triggering
  push:
    branches: [ main ] # This will trigger on pushes to main

jobs:
  fetch-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }} # Ensure this token is available for checkout

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create logs directory
      run: mkdir -p logs

    - name: Run job fetcher
      run: |
        python fetch_jobs.py 2>&1 | tee logs/fetch_$(date +%Y%m%d_%H%M%S).log
      env:
        PYTHONUNBUFFERED: 1

    - name: Check for new jobs
      id: check_jobs
      run: |
        if [ -f "jobs/job_manifest.json" ]; then
          JOB_COUNT=$(python -c "import json; data=json.load(open('jobs/job_manifest.json')); print(data.get('total_jobs', 0))")
          echo "job_count=$JOB_COUNT" >> $GITHUB_OUTPUT

          if [ -n "$(find jobs -name '*.json' -newer .git/FETCH_HEAD 2>/dev/null)" ]; then
            echo "new_jobs=true" >> $GITHUB_OUTPUT
          else
            echo "new_jobs=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "job_count=0" >> $GITHUB_OUTPUT
          echo "new_jobs=false" >> $GITHUB_OUTPUT
        fi

    - name: Send Telegram notification for new jobs
      if: steps.check_jobs.outputs.new_jobs == 'true'
      run: |
        python telegram_notifier.py
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_GROUP_CHAT_ID: ${{ secrets.TELEGRAM_GROUP_CHAT_ID }}
        PYTHONUNBUFFERED: 1

    - name: Upload scraper logs
      uses: actions/upload-artifact@v4
      with:
        name: scraper-logs-${{ github.run_number }}
        path: logs/
        retention-days: 30

    - name: Commit and push changes
      # --- IMPORTANT FIXES BELOW ---
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add jobs/ # Add the entire 'jobs' directory
        git add logs/ # Add the 'logs' directory (optional, but you had it)

        # Check if there are any changes staged for commit
        if ! git diff --staged --quiet; then
          git commit -m "ü§ñ Auto-update jobs data - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        else
          echo "No changes to commit."
        fi
      env:
        # This is the crucial part for authentication
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # --- END IMPORTANT FIXES ---

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main' # Only deploy if pushing to main branch
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./ # Publish the root directory
        exclude_assets: | # Exclude these from being published to gh-pages
          .github
          logs
          *.py
          requirements.txt
          README.md

    - name: Send deployment notification
      if: success()
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_GROUP_CHAT_ID }}" \
          -d text="‚úÖ SarkariSarthi 2.0 successfully updated and deployed!%0Aüìä Total Jobs: ${{ steps.check_jobs.outputs.job_count }}%0Aüîó Visit: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

    - name: Send failure notification
      if: failure()
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_GROUP_CHAT_ID }}" \
          -d text="‚ùå SarkariSarthi 2.0 job fetch failed!%0Aüîç Check the logs for details.%0AüìÖ Time: $(date '+%Y-%m-%d %H:%M:%S UTC')"

  health-check:
    runs-on: ubuntu-latest
    needs: fetch-and-deploy
    if: always() # Runs regardless of previous job's success or failure

    steps:
    - name: Website Health Check
      run: |
        sleep 30 # Give GitHub Pages time to update
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}")
        if [ "$RESPONSE" = "200" ]; then
          echo "‚úÖ Website is accessible"
        else
          echo "‚ùå Website returned HTTP $RESPONSE"
          exit 1

    - name: Send health check notification
      if: failure() # Only send if the health check itself failed
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_GROUP_CHAT_ID }}" \
          -d text="‚ö†Ô∏è SarkariSarthi 2.0 website health check failed!%0Aüåê URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}%0AüìÖ Time: $(date '+%Y-%m-%d %H:%M:%S UTC')"
